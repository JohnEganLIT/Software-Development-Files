package src;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

public class TestDB extends javax.swing.JFrame {
  
    /**
     * Creates new form TestDB
     */
    public TestDB() {
        initComponents();
        
        
    }
   
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        alphaButton = new javax.swing.JButton();
        priceIncrButton = new javax.swing.JButton();
        spButton = new javax.swing.JButton();
        batchButton = new javax.swing.JButton();
        outputPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Control Panel - Group A"));

        alphaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        alphaButton.setText("Display Companys Alphabetical Order");
        alphaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alphaButtonActionPerformed(evt);
            }
        });
        controlPanel.add(alphaButton);

        priceIncrButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceIncrButton.setText("Display Companys By Price Increase");
        priceIncrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceIncrButtonActionPerformed(evt);
            }
        });
        controlPanel.add(priceIncrButton);

        spButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spButton.setText("Call Stored Procedure");
        spButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spButtonActionPerformed(evt);
            }
        });
        controlPanel.add(spButton);

        batchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        batchButton.setText("Call Batch Statements");
        batchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchButtonActionPerformed(evt);
            }
        });
        controlPanel.add(batchButton);

        getContentPane().add(controlPanel, java.awt.BorderLayout.NORTH);

        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        outputPanel.setLayout(new java.awt.BorderLayout());

        output.setEditable(false);
        output.setColumns(8);
        output.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        outputPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(outputPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spButtonActionPerformed
        displayByID();
    }//GEN-LAST:event_spButtonActionPerformed

    private void alphaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alphaButtonActionPerformed
        displayCompaniesByAlpha();
    }//GEN-LAST:event_alphaButtonActionPerformed

    private void priceIncrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceIncrButtonActionPerformed
        displayCompaniesByPrice();
    }//GEN-LAST:event_priceIncrButtonActionPerformed

    private void batchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchButtonActionPerformed
        batchStatement();
    }//GEN-LAST:event_batchButtonActionPerformed
    
    private void displayCompaniesByAlpha()
    {
        try
        {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost", "root", "");
            
            Statement statement = connection.createStatement();
                    
            ResultSet resultSet = statement.executeQuery("SELECT Companynum, Company, Current_Price, Yesterdays_Price, Shares_Traded_Yesterday, Yearly_Low, Yearly_High, Listing_Date FROM iseq.prices");
            
            String results;

            ResultSetMetaData metaData =  resultSet.getMetaData();

            int numberOfColumns = metaData.getColumnCount();

            results = "ID\tCompany\t\tCurr Price\tPrice Yest\tTrd Yest\tYr Low\tYr High\tDate Listed ";
            results +="\n";

            while(resultSet.next()) 
            {
		for (int i=1;  i <= numberOfColumns; i++)
                {
                    results += resultSet.getObject(i) + "\t";
                }//end for

                results+= "\n";
            }
            System.out.print(results);
            output.setText(results);
        }       
        catch(SQLException sqlex) 
        {
            JOptionPane.showMessageDialog(null, sqlex.toString());
            System.exit(0);
	}
    }
    
    private void displayCompaniesByPrice()
    {
        try
        {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost", "root", "");
            
            Statement statement = connection.createStatement();
                    
            ResultSet resultSet = statement.executeQuery("SELECT Companynum, Company, Current_Price, Yesterdays_Price, Shares_Traded_Yesterday, Yearly_Low, Yearly_High, Listing_Date FROM iseq.prices");
            
            String results;

            ResultSetMetaData metaData =  resultSet.getMetaData();

            int numberOfColumns = metaData.getColumnCount();

            results = "ID\tCompany\t\tCurr Price\tPrice Yest\tTrd Yest\tYr Low\tYr High\tDate Listed ";
            results +="\n";
            
            /*
            int[] orderedArray = new int[numberOfColumns];
            Double largest = 0.0;
            int selectedIndex = 0;
            for(int i=1; i< numberOfColumns; i++)
            {
                int largestIndex = 0;
                for(int x=1; x< numberOfColumns; x++)
                {
                    Double difference = (Double)resultSet.getObject(3) - (Double)resultSet.getObject(4);

                    if(difference > largest)
                    {
                        largestIndex = x;
                        largest = difference;
                    }
                    
                    results+= "\n";
                }      
                results += resultSet.getObject(largestIndex) + "\t";
            }  
            
             
             System.out.print(largest);  
            */
            while(resultSet.next()) 
            {
		for (int i=1;  i <= numberOfColumns; i++)
                {
                    
                }//end for

                results+= "\n";
            }
            System.out.print(results);
            output.setText(results);
        }       
        catch(SQLException sqlex) 
        {
            JOptionPane.showMessageDialog(null, sqlex.toString());
            System.exit(0);
	}
    }
    
    private void displayByID()
    {
        try
        {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost", "root", "");
            
            //Statement statement = connection.createStatement;
                    
            statement = connection.prepareCall("{call getCompanyOfID(1)}"); 
            
          
            
        }
        catch(SQLException sqlex) 
        {
            JOptionPane.showMessageDialog(null, sqlex.toString());
            System.exit(0);
	}
        
    }
    
    private void batchStatement()
    {
        try
        {
             String [] queries = 
            {
                "INSERT INTO prices(Companynum, Company, Current_Price, Yesterdays_Price, Shares_Traded_Yesterday, Yearly_Low, Yearly_High, Listing_Date, image) VALUES ('38', 'LIT Enterprises', '23.55', '28.45', '23', '39.23', '34.32', '2016-01-01', 'lit.jpg')",
                "DELETE FROM prices WHERE CompanyNum = '1'",
                "UPDATE prices SET curr_price = curr_price + ((curr_price/100)*10) WHERE companynum = '4'",
                "UPDATE prices SET curr_price = curr_price - ((curr_price/100)*20) WHERE companynum = '20'"
            };
             
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost", "root", "");
            
            Statement statement = connection.createStatement();
            
            for (String query : queries) 
            {
                statement.execute(query);
            }
        }
        catch(SQLException sqlex) 
        {
            JOptionPane.showMessageDialog(null, sqlex.toString());
            System.exit(0);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TestDB().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alphaButton;
    private javax.swing.JButton batchButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JButton priceIncrButton;
    private javax.swing.JButton spButton;
    // End of variables declaration//GEN-END:variables
}
